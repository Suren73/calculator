import {
	handleEquals,
	handleNumber,
	handleOperator,
	handleReset,
} from "./handlers";

export const getButtons = (state, styles) => [
	{
		id: "1",
		value: "1",
		type: "number",
		className: styles.button,
		handler: (num) => handleNumber(state, num),
	},
	{
		id: "2",
		value: "2",
		type: "number",
		className: styles.button,
		handler: (num) => handleNumber(state, num),
	},
	{
		id: "3",
		value: "3",
		type: "number",
		className: styles.button,
		handler: (num) => handleNumber(state, num),
	},
	{
		id: "4",
		value: "4",
		type: "number",
		className: styles.button,
		handler: (num) => handleNumber(state, num),
	},
	{
		id: "5",
		value: "5",
		type: "number",
		className: styles.button,
		handler: (num) => handleNumber(state, num),
	},
	{
		id: "6",
		value: "6",
		type: "number",
		className: styles.button,
		handler: (num) => handleNumber(state, num),
	},
	{
		id: "7",
		value: "7",
		type: "number",
		className: styles.button,
		handler: (num) => handleNumber(state, num),
	},
	{
		id: "8",
		value: "8",
		type: "number",
		className: styles.button,
		handler: (num) => handleNumber(state, num),
	},
	{
		id: "9",
		value: "9",
		type: "number",
		className: styles.button,
		handler: (num) => handleNumber(state, num),
	},
	{
		id: "0",
		value: "0",
		type: "number",
		className: styles.button,
		handler: (num) => handleNumber(state, num),
	},
	{
		id: "C",
		value: "C",
		type: "operator",
		className: styles.reset,
		handler: () => handleReset(state),
	},
	{
		id: "+",
		value: "+",
		type: "operator",
		className: styles.operator,
		handler: (output, op) => handleOperator(state, output, op),
	},
	{
		id: "-",
		value: "-",
		type: "operator",
		className: styles.operator,
		handler: (output, op) => handleOperator(state, output, op),
	},
	{
		id: "=",
		value: "=",
		type: "operator",
		className: styles.equals,
		handler: (output) => handleEquals(state, output),
	},
];
